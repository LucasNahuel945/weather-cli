#!/usr/bin/env python
# -*- coding: utf-8 -*-
import argparse
import requests

# get icons
def icons():
    return {
        # DAY           # NIGTH
        '01d': '',     '01n':'',  # sun / moon
        '02d': '',     '02n':'',  # cloudy with sun / moon
        '03d': '',     '03n':'',  # cloudy
        '04d': '',     '04n':'',  # cloudy
        '09d': '',     '09n':'',  # rain
        '10d': '',     '10n':'',  # rain with sun / moon
        '11d': '',     '11n':'',  # storm
        '13d': '',     '13n':''   # snow
    }

# Usage 
parser = argparse.ArgumentParser()
parser.add_argument("-c", "--city", help="set you city as [city,country] example London,uk", required=True)
parser.add_argument("-f", "--fahrenheit", help="set temp as fahrenheit, Celsius by default", action="store_true")
parser.add_argument("-i", "--iconify", help="show weather status icons, NerdFonts must be installed", action="store_true")
parser.add_argument("-k", "--key", help="set you API key, get it from https://openweathermap.org")
parser.add_argument("-v", "--verbose", help="show output description", action="store_true")
# parser.add_argument("-d", "--dayly", help="get today weather status", action="store_true")
# parser.add_argument("-w", "--weekly", help="get weather status for 5 days", action="store_true")
args = parser.parse_args()

# set apikey
if args.key:
    open('apikey', 'wb').write(str.encode(args.key))

# get storaged apikey
try:
    apikey = open('apikey', 'rb').read().decode()
except FileNotFoundError:
    print('API-key no setting. Get it on openweathermap.org and use -k or --key option to set')
    exit()

# imperial => fahrenheit , metric => celsius (default)
units = 'imperial' if args.fahrenheit else 'metric'

# get data from openweathermap api
weather = requests.get('https://api.openweathermap.org/data/2.5/weather?q=' + args.city + '&APPID=' + apikey + '&units=' + units).json()

# format output
units = '°F ' if args.fahrenheit else '°C '
temperature = str(weather['main']['temp'])
output = temperature + units

# set output with icons
if args.iconify:
    icon = weather['weather'][0]['icon']
    output = output + icons()[icon] 

# set verbose output
if args.verbose:
    city = weather['name']
    country = weather['sys']['country']
    output = f"Temperature in {city} ({country}) it's {output} and {weather['weather'][0]['description']}"

print(output)
